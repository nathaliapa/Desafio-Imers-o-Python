# -*- coding: utf-8 -*-
"""Aula3DesafioRealizado.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ldLB1EpWVLprkZxyN2anopcvcc37JGGY

**Aula 2 importação**

*   importar a bibliote panda e definir uma nomeclatura.
*   plotly.express para grafico
"""

import pandas as pd
import plotly.express as px

"""definir uma variavel.

.read_"tipo de executavel"(caminho do arquivo, nome da pagina )

variavel+ação da variavel.

.head() = pega o intevaldo de linhas que deve ser monstrado sem ele mostra a tabela de forma resumida.
"""

df_principal = pd.read_excel('/content/Aula 2 de Imersão Python - Tabela de ações.xlsx',sheet_name='Principal')
df_principal.head(10)

df_Total_de_acoes = pd.read_excel('/content/Aula 2 de Imersão Python - Tabela de ações.xlsx',sheet_name='Total_de_acoes')
df_Total_de_acoes.head(10)

df_Ticker = pd.read_excel('/content/Aula 2 de Imersão Python - Tabela de ações.xlsx',sheet_name='Ticker')
df_Ticker.head(10)

df_Chat_GPT = pd.read_excel('/content/Aula 2 de Imersão Python - Tabela de ações.xlsx',sheet_name='Chat_GPT')
df_Chat_GPT.head(10)

"""manupulação de dataframe

"""

df_principal = df_principal[['Ativo','Data','Último (R$)','Var. Dia (%)']].copy()
df_principal

df_principal = df_principal.rename(columns={'Último (R$)':'Valor_Final','Var. Dia (%)':'Var_Dia_PCT'}).copy()
df_principal

df_principal['Var_pct'] = df_principal['Var_Dia_PCT'] / 100
df_principal['Var_Inicial'] = df_principal['Valor_Final'] / (df_principal['Var_pct'] + 1)
df_principal

df_principal = df_principal.merge(df_Total_de_acoes,left_on='Ativo', right_on='Código', how='left' )
df_principal

df_principal = df_principal.drop(columns=['Código'])
df_principal

df_principal['Variacao_RS'] = (df_principal['Valor_Final'] - df_principal['Var_Inicial']) * df_principal['Qtde. Teórica']
df_principal

pd.options.display.float_format= '{:.2f}'.format

df_principal['Qtde. Teórica'] = df_principal['Qtde. Teórica'].astype(int)
df_principal

df_principal = df_principal.rename(columns={'Qtde. Teórica':'Qtde_teorica'}).copy()
df_principal

df_principal["Resultado"] = df_principal['Variacao_RS'].apply(lambda x: "Subiu" if x > 0 else ("Desceu" if x < 0 else "Estavel"))
df_principal

df_principal = df_principal.merge(df_Ticker, left_on='Ativo', right_on='Ticker', how='left')
df_principal = df_principal.drop(columns=['Ticker'])
df_principal

df_principal = df_principal.merge(df_Chat_GPT, left_on='Nome', right_on='Empresa', how='left')
df_principal = df_principal.drop(columns=['Empresa'])
df_principal

df_principal = df_principal.rename(columns={'Idade (anos)':'Idade'}).copy()
df_principal

df_principal["Cat_Idade"] = df_principal["Idade"].apply(lambda x: "Mais de 100 anos" if x > 100 else ("Menos de 50" if x < 50 else "Entre de 50 e 100"))
df_principal

# Calcular a maior variação R$
maior_variacao_rs = df_principal['Variacao_RS'].max()

# Calcular a menor variação R$
menor_variacao_rs = df_principal['Variacao_RS'].min()

# Calcular a média
media_variacao_rs = df_principal['Variacao_RS'].mean()

# Calcular a média de quem subiu
media_subiu = df_principal[df_principal['Resultado'] == 'Subiu']['Variacao_RS'].mean()

# Calcular a média de quem desceu
media_desceu = df_principal[df_principal['Resultado'] == 'Desceu']['Variacao_RS'].mean()

# Exibir os resultados
print("Maior variação R$: {:.2f}".format(maior_variacao_rs))
print("Menor variação R$: {:.2f}".format(menor_variacao_rs))
print("Média R$: {:.2f}".format(media_variacao_rs))
print("Média de quem subiu R$: {:.2f}".format(media_subiu))
print("Média de quem Desceu R$: {:.2f}".format(media_desceu))

df_principal_subiu = df_principal[df_principal['Resultado'] == 'Subiu']
df_principal_subiu

df_analise_segmento = df_principal_subiu.groupby('Cat_Idade')['Variacao_RS'].sum().reset_index()
df_analise_segmento['Variacao_RS'] = df_analise_segmento['Variacao_RS'].map('R${:,.2f}'.format)
df_analise_segmento

df_analise_saldo = df_principal.groupby('Resultado')['Variacao_RS'].sum().reset_index()
df_analise_saldo['Variacao_RS'] = df_analise_saldo['Variacao_RS'].map('R${:,.2f}'.format)
df_analise_saldo

fig = px.bar(df_analise_saldo,x='Resultado',y='Variacao_RS',text='Variacao_RS',title="Variação real por reultado")
fig.show()

fig = px.pie(df_analise_segmento, values='Variacao_RS', names='Segmento', title='Gráfico de Pizza - Resultado da Variação por Segmento')
fig.show()



df_analise_cat_idade = df_principal.groupby('Cat_Idade')['Variacao_RS'].sum().reset_index()
df_analise_cat_idade['Variacao_RS'] = df_analise_cat_idade['Variacao_RS'].map('R${:,.2f}'.format)
df_analise_cat_idade

fig = px.bar(df_analise_cat_idade, x='Cat_Idade', y='Variacao_RS', text='Variacao_RS', title='Variação Reais por Categoria de Idade')
fig.show()

df_soma_condicional = df_principal.groupby('Cat_Idade')['Idade'].count().reset_index()
df_soma_condicional

fig = px.pie(df_soma_condicional, values='Idade', names='Cat_Idade', title='Gráfico de Pizza -Categoria de Idade por Empresas')
fig.show()